# Path to your oh-my-zsh installation.
export ZSH=/home/jakob/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git gitfast)

# User configuration

export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"

export PATH=$PATH:$HOME/.vimpkg/bin
export PATH=$HOME/.cargo/bin:$PATH

export RUSTC_WRAPPER=sccache

export COMPOSE_DOCKER_CLI_BUILD=1

alias vim="stty stop '' -ixoff ; nvim"
# `Frozing' tty, so after any command terminal settings will be restored
ttyctl -f
# Remap CAPS LOCK to ESCAPE
xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'

source $ZSH/oh-my-zsh.sh

fpath=(~/.zsh/completion $fpath)

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/jakob/google-cloud-sdk/path.zsh.inc' ]; then source '/home/jakob/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/jakob/google-cloud-sdk/completion.zsh.inc' ]; then source '/home/jakob/google-cloud-sdk/completion.zsh.inc'; fi

# re:infer dev environment
source ${HOME}/code/platform/dev/shellenv
source ${HOME}/code/platform/dev/shellrc

#export MYPYPATH=${HOME}/code/platform/api:${HOME}/code/platform/auth:${HOME}/code/platform/index:${HOME}/code/platform/labeller:${HOME}/code/platform/user-model-store:${HOME}/code/platform/predict/server:${HOME}/code/platform/predict/shared:${HOME}/code/platform/pycommon:${HOME}/code/platform/pyrethool:${HOME}/code/platform/pyweb:${HOME}/code/platform/refile/client:${HOME}/code/platform/refile/server:${HOME}/code/platform/rpz:${HOME}/code/platform/sentence:${HOME}/code/platform/store:${HOME}/code/platform/summary/client:${HOME}/code/platform/summary/server:${HOME}/code/platform/theme:${HOME}/code/platform/train:${HOME}/code/platform/refinery:${HOME}/code/platform/parse-email
# project and install settings
export REPO_ROOT="$HOME/code/platform"
# set mypypath
export MYPYPATH="$(find ${REPO_ROOT} -name 'setup.py' -not -wholename '**/node_modules/**' | xargs dirname | tr '\n' ':')$MYPYPATH"

function fullcheck () {
  find -name '.flake8' | grep -v './ci/' | xargs -P10 -IX sh -c 'cd $(dirname X) && echo "flake8 $(dirname X)" && flake8 reinfer' &&
  find -name 'mypy.ini' | grep -v './ci/|./store/' | xargs -P10 -IX sh -c 'cd $(dirname X) && echo "mypy $(dirname X)" && mypy reinfer'
}

alias pt='papertrail'
alias ptp='papertrail -g prod'
alias pts='papertrail -g staging'
alias gu=gsutil
alias dcr='docker-compose rm'
alias dcu='docker-compose up'
alias dcs='docker-compose stop'
alias dcb='docker-compose build'
alias dc='docker-compose'
alias wr="venv r"
alias cwr="cd ~/code/platform;wr"
alias gld='git log --pretty=format:"%C(auto,yellow)%h%C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(12,trunc)%aN %C(auto,reset)%s%C(auto,red)% gD% D" --date=short --no-merges $(git describe --tags --abbrev=0)..HEAD'

function ptsf () {
  papertrail -g staging -f gcp-staging-$1
}

function ptpf () {
  papertrail -g prod -f gcp-prod-$1
}

source <(kubectl completion zsh)

### venv helpers
# usage
# $ mkvenv myvirtualenv # creates venv under ~/.venv/
# $ venv myvirtualenv   # activates venv
# $ deactivate          # deactivates venv
# $ rmvenv myvirtualenv # removes venv
# $ lsvenv              # lists available venvs

export VENV_HOME="$HOME/.venv"
[[ -d $VENV_HOME ]] || mkdir $VENV_HOME

venv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      source "$VENV_HOME/$1/bin/activate"
  fi
}

mkvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      python3 -m venv $VENV_HOME/$1
  fi
}

rmvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      rm -r $VENV_HOME/$1
  fi
}

lsvenv() {
  ls $VENV_HOME
}

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# The following lines were added by jakob
zstyle ':completion:*' insert-tab false
# End of lines added by jakob
# The following lines were added by compinstall
zstyle ':completion:*' completer _complete _ignored
zstyle :compinstall filename '/home/jakob/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=100000
unsetopt autocd
bindkey -e
# End of lines configured by zsh-newuser-install

# Created by `userpath` on 2020-07-01 09:22:48
export PATH="$PATH:/home/jakob/.local/bin"

# fnm
export PATH=/home/jakob/.fnm:$PATH
eval "`fnm env`"
